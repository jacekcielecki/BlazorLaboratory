@page "/fetchdata"

<PageTitle>Weather forecast</PageTitle>

@using BlazorLaboratory.BlazorServer.Data
@inject WeatherForecastService ForecastService

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>
<button @onclick="Func1">Func1</button>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            <Virtualize ItemsProvider="LoadForecasts" Context="forecast" @ref="ForecastsList">
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    @if (forecast.TemperatureC > 20)
                    {
                        <td><b>@forecast.TemperatureC</b></td>
                    }
                    else
                    {
                        <td>@forecast.TemperatureC</td>
                    }
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            </Virtualize>
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;
    private int _totalForecasts;
    private bool _isFirstRequest = true;
    public Virtualize<WeatherForecast> ForecastsList { get; set; }

    private async ValueTask<ItemsProviderResult<WeatherForecast>> LoadForecasts(ItemsProviderRequest request)
    {
        if (_isFirstRequest)
        {
            forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
            _totalForecasts = forecasts.Length;
            _isFirstRequest = false;
        }

        var dataToDisplay = forecasts.Skip(request.StartIndex).Take(request.Count);
        return new ItemsProviderResult<WeatherForecast>(dataToDisplay, _totalForecasts);
    }


    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }

    private async Task Func1()
    {
        var a = (Virtualize<WeatherForecast>)ForecastsList;
        await a.RefreshDataAsync();
    }
}
